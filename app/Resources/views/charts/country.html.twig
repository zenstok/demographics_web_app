{% extends 'base.html.twig' %}

{% block stylesheets %}
<style>
</style>
{% endblock %}

{% block body %}
                            <div class="row"> 
                                <div class="col-md-12">
                                    <div class="overview-wrap" style="margin-bottom: 10px;">
                                        <h2><i class="fa fa-map-marker red"></i><strong>{{country}}</strong></h2>

                                        <div class="account-wrap" stlye="user-select:none;">
                                            <div class="account-item clearfix js-item-menu">
                                                <div class="image">
                                                    <img src="/images/icon/avatar-01.jpg" alt="John Doe">
                                                </div>
                                                <div class="content">
                                                    <a class="js-acc-btn" href="#">{{app.user.username}}</a>
                                                </div>
                                                <div class="account-dropdown js-dropdown">
                                                    <div class="info clearfix">
                                                        <div class="image">
                                                            <a href="#">
                                                                <img src="/images/icon/avatar-01.jpg" alt="John Doe">
                                                            </a>
                                                        </div>
                                                        <div class="content">
                                                            <h5 class="name">
                                                                <a href="#">{{app.user.username}}</a>
                                                            </h5>
                                                            <span class="email">{{app.user.email}}</span>
                                                        </div>
                                                    </div>
                                                    <div class="account-dropdown__footer">
                                                        <a href="/logout">
                                                            <i class="zmdi zmdi-power"></i>Logout</a>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        <div class="row m-t-25">
                            <div class="col-sm-6 col-lg-3">
                                <div class="overview-item overview-item--c1">
                                    <div class="overview__inner">
                                      <a data-toggle="collapse" href="#collapse1">
                                        <div class="overview-box clearfix">
                                            <div class="icon">
                                                <i class="zmdi zmdi-account-o"></i>
                                            </div>
                                            <div class="text">
                                                <h2>{{outputTotalPopulation.source.data[1].value}}</h2>
                                                <span>populația țării</span>
                                            </div>
                                        </div>
                                        <div class="overview-chart">
                                            <canvas id="wc1"></canvas>
                                        </div>
                                      </a>
                                        <div id="collapse1" class="panel-collapse collapse">
                                          <div class="panel-body" style="color:white;"><br>Populaţia reprezintă, alături de teritoriu şi de autoritatea guvernamentală, unul din elementele constitutive necesare pentru existenţa însăşi a statului .Nu se poate vorbi de existenţa unui stat dacă acesta nu are populaţie.Populaţia este în general definită ca totalitatea persoanelor fizice care locuiesc pe teritoriul unui stat şi sunt supuse jurisdicţiei acestuia.</div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-6 col-lg-3">
                                <div class="overview-item overview-item--c2">
                                    <div class="overview__inner">
                                      <a data-toggle="collapse" href="#collapse2">
                                        <div class="overview-box clearfix">
                                            <div class="icon">
                                                <i class="zmdi zmdi-face"></i>
                                            </div>
                                            <div class="text">
                                                <h2>{{outputLifeExpectancyFemale.source.data[3].value}} ani</h2>
                                                <span>Speranța de viață femei</span>
                                            </div>
                                        </div>
                                        <div class="overview-chart">
                                            <canvas id="wc2"></canvas>
                                        </div>
                                      </a>
                                        <div id="collapse2" class="panel-collapse collapse">
                                          <div class="panel-body" style="color:white;"><br>Speranţa de viaţă la naştere este numărul mediu de ani pe care se consideră că un nou-născut  îl va trăi dacă sănătatea şi condiţiile de viaţă de la naştere rămân  neschimbate pe parcursul vieţii sale. De asemenea, speranţa de viaţă  reflectă nivelul sănătăţii unei populaţii şi calitatea îngrijirilor pe  care locuitorii săi le primesc atunci când sunt bolnavi. Speranţa de  viaţă este în general mai mare în ţările în care oamenii au venituri  mari decât în cele cu venituri medii şi mici.</div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-6 col-lg-3">
                                <div class="overview-item overview-item--c3">
                                    <div class="overview__inner">
                                      <a data-toggle="collapse" href="#collapse3">
                                        <div class="overview-box clearfix">
                                            <div class="icon">
                                                <i class="zmdi zmdi-face"></i>
                                            </div> 
                                            <div class="text">
                                                <h2>{{outputLifeExpectancyMale.source.data[3].value}} ani</h2>
                                                <span>Speranța de viață bărbați</span>
                                            </div>
                                        </div>
                                        <div class="overview-chart">
                                            <canvas id="wc3"></canvas>
                                        </div>
                                      </a>
                                        <div id="collapse3" class="panel-collapse collapse">
                                          <div class="panel-body" style="color:white;"><br>Speranţa de viaţă la  naştere este numărul mediu de ani pe care se consideră că un nou-născut  îl va trăi dacă sănătatea şi condiţiile de viaţă de la naştere rămân  neschimbate pe parcursul vieţii sale. De asemenea, speranţa de viaţă  reflectă nivelul sănătăţii unei populaţii şi calitatea îngrijirilor pe  care locuitorii săi le primesc atunci când sunt bolnavi. Speranţa de  viaţă este în general mai mare în ţările în care oamenii au venituri  mari decât în cele cu venituri medii şi mici.</div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-6 col-lg-3">
                                <div class="overview-item overview-item--c4">
                                    <div class="overview__inner">
                                      <a data-toggle="collapse" href="#collapse4">
                                        <div class="overview-box clearfix">
                                            <div class="icon">
                                                <i class="zmdi zmdi-money"></i>
                                            </div>
                                            <div class="text">  
                                                <h2 id="gdpValue">{{outputGDPcapita.source.data[2].value|round(2)}}</h2>
                                                <span>PIB per capita, dolari</span>
                                            </div>
                                        </div>
                                        <div class="overview-chart">
                                            <canvas id="wc4"></canvas>
                                        </div>
                                      </a>
                                        <div id="collapse4" class="panel-collapse collapse">
                                          <div class="panel-body" style="color:white;"><br>PIB-ul pe cap de locuitor este un indicator de măsurare a producției totale a unei țări care preia produsul intern brut (PIB) și îl împarte la numărul populaţiei din țară.<br>PIB-ul pe cap de locuitor este foarte util atunci dorim să facem comparaţii între diferite țări, deoarece acesta reflectă performanța relativă a țărilor. Creșterea PIB-ului pe cap de locuitor semnalează o creștere a economiei și tinde să reflecte o creștere a productivității.</div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                          <div class="col-lg-6">
                                <div class="au-card m-b-30">
                                    <div class="au-card-inner">
                                        <h3 class="title-2 m-b-40">Natalitatea</h3>
                                        <canvas id="lineChart1"></canvas>
                                    </div>
                                </div>
                            </div>
                          <div class="col-lg-6">
                                <div class="au-card m-b-30">
                                    <div class="au-card-inner">
                                        <h3 class="title-2 m-b-40">Mortalitatea</h3>
                                        <canvas id="lineChart2"></canvas>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-6">
                                <div class="au-card m-b-30">
                                    <div class="au-card-inner">
                                        <h3 class="title-2 m-b-40">Densitatea populației</h3>
                                        <canvas id="barChart1"></canvas>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="au-card m-b-30">
                                    <div class="au-card-inner">
                                        <h3 class="title-2 m-b-40">Gradul de urbanizare</h3>
                                        <canvas id="barChart2"></canvas>
                                    </div>
                                </div>
                            </div>
                        </div>

{% endblock %}

{% block javascripts %}
<script src="/js/GDPcolor.js"></script>
<script>
    // var prefix = window.location.href.split("countries/")[1];
    // $('#gdpValue').text(gdpData[prefix]);

  try {
    //bar chart1
    var ctx = document.getElementById("barChart1");
    if (ctx) {
      ctx.height = 200;
      let labelsArr = [];
      let valuesArr = [];
      {% for item in outputPopulationDensity.source.data|reverse %}
        labelsArr.push({{item.variable[3].value}}); 
        valuesArr.push({{item.value}}); 
      {% endfor %} 
      var myChart = new Chart(ctx, {
        type: 'bar',
        defaultFontFamily: 'Poppins',
        data: {
          labels: labelsArr,
          datasets: [
            {
              label: "Număr locuitori/Km²",
              data: valuesArr,
              borderColor: "rgba(0, 123, 255, 0.9)",
              borderWidth: "0",
              backgroundColor: "rgba(0, 123, 255, 0.5)",
              fontFamily: "Poppins"
            },
          ]
        },
        options: {
          legend: {
            position: 'top',
            labels: {
              fontFamily: 'Poppins'
            }

          },
          scales: {
            xAxes: [{
              ticks: {
                fontFamily: "Poppins"

              }
            }],
            yAxes: [{
              ticks: {
                beginAtZero: true,
                fontFamily: "Poppins"
              }
            }]
          }
        }
      });
    }

    //bar chart2
    var ctx = document.getElementById("barChart2");
    if (ctx) {
      ctx.height = 200;
      let labelsArr = [];
      let valuesArr = [];
      {% for item in outputUrbanPopulation.source.data|reverse %}
        labelsArr.push({{item.variable[3].value}}); 
        valuesArr.push({{item.value}}); 
      {% endfor %} 
      var myChart = new Chart(ctx, {
        type: 'bar',
        defaultFontFamily: 'Poppins',
        data: {
          labels: labelsArr,
          datasets: [
            {
              label: "Procent(%)",
              data: valuesArr,
              borderColor: "rgba(0, 123, 255, 0.9)",
              borderWidth: "0",
              backgroundColor: "rgba(0, 30, 155, 0.5)",
              fontFamily: "Poppins"
            },
          ]
        },
        options: {
          legend: {
            position: 'top',
            labels: {
              fontFamily: 'Poppins'
            }

          },
          scales: {
            xAxes: [{
              ticks: {
                fontFamily: "Poppins"

              }
            }],
            yAxes: [{
              ticks: {
                beginAtZero: true,
                fontFamily: "Poppins"
              }
            }]
          }
        }
      });
    }


    //WidgetChart 1
    var ctx = document.getElementById("wc1");
    if (ctx) {
      ctx.height = 130;
      let labelsArr = [];
      let valuesArr = [];
      {% for pop in outputTotalPopulation.source.data|reverse %}
        labelsArr.push({{pop.variable[3].value}}); 
        valuesArr.push({{pop.value}}); 
      {% endfor %}
      var myChart = new Chart(ctx, {
        type: 'line',
        data: {
          labels: labelsArr,
          type: 'line',
          datasets: [{
            data: valuesArr,
            label: 'Populație',
            backgroundColor: 'rgba(255,255,255,.1)',
            borderColor: 'rgba(255,255,255,.55)',
          },]
        },
        options: {
          maintainAspectRatio: true,
          legend: {
            display: false
          },
          layout: {
            padding: {
              left: 0,
              right: 0,
              top: 0,
              bottom: 0
            }
          },
          responsive: true,
          scales: {
            xAxes: [{
              gridLines: {
                color: 'transparent',
                zeroLineColor: 'transparent'
              },
              ticks: {
                fontSize: 2,
                fontColor: 'transparent'
              }
            }],
            yAxes: [{
              display: false,
              ticks: {
                display: false,
              }
            }]
          },
          title: {
            display: false,
          },
          elements: {
            line: {
              borderWidth: 0
            },
            point: {
              radius: 0,
              hitRadius: 10,
              hoverRadius: 4
            }
          }
        }
      });
    }


    //WidgetChart 2
    var ctx = document.getElementById("wc2");
    if (ctx) {
      ctx.height = 130;
      let labelsArr = [];
      let valuesArr = [];
      {% for item in outputLifeExpectancyFemale.source.data|reverse %}
        labelsArr.push({{item.variable[3].value}}); 
        valuesArr.push({{item.value}}); 
      {% endfor %}
      var myChart = new Chart(ctx, {
        type: 'line',
        data: {
          labels: labelsArr,
          type: 'line',
          datasets: [{
            data: valuesArr,
            label: 'Speranța de viață',
            backgroundColor: 'transparent',
            borderColor: 'rgba(255,255,255,.55)',
          },]
        },
        options: {

          maintainAspectRatio: false,
          legend: {
            display: false
          },
          responsive: true,
          tooltips: {
            mode: 'index',
            titleFontSize: 12,
            titleFontColor: '#000',
            bodyFontColor: '#000',
            backgroundColor: '#fff',
            titleFontFamily: 'Montserrat',
            bodyFontFamily: 'Montserrat',
            cornerRadius: 3,
            intersect: false,
          },
          scales: {
            xAxes: [{
              gridLines: {
                color: 'transparent',
                zeroLineColor: 'transparent'
              },
              ticks: {
                fontSize: 2,
                fontColor: 'transparent'
              }
            }],
            yAxes: [{
              display: false,
              ticks: {
                display: false,
              }
            }]
          },
          title: {
            display: false,
          },
          elements: {
            line: {
              tension: 0.00001,
              borderWidth: 1
            },
            point: {
              radius: 4,
              hitRadius: 10,
              hoverRadius: 4
            }
          }
        }
      });
    }


    //WidgetChart 3
    var ctx = document.getElementById("wc3");
    if (ctx) {
      ctx.height = 130;
      let labelsArr = [];
      let valuesArr = [];
      {% for item in outputLifeExpectancyMale.source.data|reverse %}
        labelsArr.push({{item.variable[3].value}}); 
        valuesArr.push({{item.value}}); 
      {% endfor %}
      var myChart = new Chart(ctx, {
        type: 'line',
        data: {
          labels: labelsArr,
          type: 'line',
          datasets: [{
            data: valuesArr,
            label: 'Speranța de viață',
            backgroundColor: 'transparent',
            borderColor: 'rgba(255,255,255,.55)',
          },]
        },
        options: {

          maintainAspectRatio: false,
          legend: {
            display: false
          },
          responsive: true,
          tooltips: {
            mode: 'index',
            titleFontSize: 12,
            titleFontColor: '#000',
            bodyFontColor: '#000',
            backgroundColor: '#fff',
            titleFontFamily: 'Montserrat',
            bodyFontFamily: 'Montserrat',
            cornerRadius: 3,
            intersect: false,
          },
          scales: {
            xAxes: [{
              gridLines: {
                color: 'transparent',
                zeroLineColor: 'transparent'
              },
              ticks: {
                fontSize: 2,
                fontColor: 'transparent'
              }
            }],
            yAxes: [{
              display: false,
              ticks: {
                display: false,
              }
            }]
          },
          title: {
            display: false,
          },
          elements: {
            line: {
              borderWidth: 1
            },
            point: {
              radius: 4,
              hitRadius: 10,
              hoverRadius: 4
            }
          }
        }
      });
    }


    //WidgetChart 4
    var ctx = document.getElementById("wc4");
    if (ctx) {
      ctx.height = 115;
      let labelsArr = [];
      let valuesArr = [];
      {% for gdp in outputGDPcapita.source.data|reverse %}
        labelsArr.push({{gdp.variable[3].value}}); 
        valuesArr.push({{gdp.value}}); 
      {% endfor %}
      var myChart = new Chart(ctx, {
        type: 'bar',
        data: {
          labels: labelsArr,
          datasets: [
            {
              label: "PIB per capita",
              data: valuesArr,
              borderColor: "transparent",
              borderWidth: "0",
              backgroundColor: "rgba(255,255,255,.3)"
            }
          ]
        },
        options: {
          maintainAspectRatio: true,
          legend: {
            display: false
          },
          scales: {
            xAxes: [{
              display: false,
              categoryPercentage: 1,
              barPercentage: 0.65
            }],
            yAxes: [{
              display: false
            }]
          }
        }
      });
    }

    //line chart
    var ctx = document.getElementById("lineChart1");
    if (ctx) {
      ctx.height = 150;
      let labelsArr = [];
      let valuesArr = [];
      {% for item in outputBirthRate.source.data|reverse %}
        labelsArr.push({{item.variable[3].value}}); 
        valuesArr.push({{item.value}}); 
      {% endfor %}
      var myChart = new Chart(ctx, {
        type: 'line',
        data: {
          labels: labelsArr,
          defaultFontFamily: "Poppins",
          datasets: [
            {
              label: "Născuți vii la 1000 de locuitori",
              borderColor: "rgba(0,0,0,.09)",
              borderWidth: "1",
              backgroundColor: "rgba(77, 175, 124, 1)",
              data: valuesArr
            }
          ]
        },
        options: {
          legend: {
            position: 'top',
            labels: {
              fontFamily: 'Poppins'
            }

          },
          responsive: true,
          tooltips: {
            mode: 'index',
            intersect: false
          },
          hover: {
            mode: 'nearest',
            intersect: true
          },
          scales: {
            xAxes: [{
              ticks: {
                fontFamily: "Poppins"

              }
            }],
            yAxes: [{
              ticks: {
                beginAtZero: true,
                fontFamily: "Poppins"
              }
            }]
          }

        }
      });
    }

    //line chart
    var ctx = document.getElementById("lineChart2");
    if (ctx) {
      ctx.height = 150;
      let labelsArr = [];
      let valuesArr = [];
      {% for item in outputDeathRate.source.data|reverse %}
        labelsArr.push({{item.variable[3].value}}); 
        valuesArr.push({{item.value}}); 
      {% endfor %}
      var myChart = new Chart(ctx, {
        type: 'line',
        data: {
          labels: labelsArr,
          defaultFontFamily: "Poppins",
          datasets: [
            {
              label: "Morți la 1000 de locuitori",
              borderColor: "rgba(0,0,0,.09)",
              borderWidth: "1",
              backgroundColor: "rgba(150, 40, 27, 1)",
              data: valuesArr
            }
          ]
        },
        options: {
          legend: {
            position: 'top',
            labels: {
              fontFamily: 'Poppins'
            }

          },
          responsive: true,
          tooltips: {
            mode: 'index',
            intersect: false
          },
          hover: {
            mode: 'nearest',
            intersect: true
          },
          scales: {
            xAxes: [{
              ticks: {
                fontFamily: "Poppins"

              }
            }],
            yAxes: [{
              ticks: {
                beginAtZero: true,
                fontFamily: "Poppins"
              }
            }]
          }

        }
      });
    }


  } catch (error) {
    console.log(error);
  }


</script>
{% endblock %}
